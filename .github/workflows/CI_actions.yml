name: CI with GitHub actions

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      - name: Install project
        run: poetry install --no-interaction
      - name: Run flake8
        run: |
          python -m pip install --upgrade flake8
          flake8 --ignore E203, W503 --max-line-length 88 src/
      - name: Run PyLint
        run: |
          source .venv/bin/activate
          pip install pylint
          pylint src
          pylint tests
      - name: Run mypy
        run: |
          source .venv/bin/activate
          pip install mypy
          mypy src --ignore-missing-imports
          mypy tests --ignore-missing-imports
      - name: Testing
        run: |
          source .venv/bin/activate
          pip install pytest
          pytest tests/